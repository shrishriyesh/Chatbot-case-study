// server/services/deepseekService.js
const OpenAI = require("openai").default;

const openai = new OpenAI({
  baseURL: "https://api.deepseek.com",  // Deepseek API base URL
  apiKey: process.env.DEEPSEEK_API_KEY,   // Your API key loaded from .env
});

/**
 * Existing function that uses a specialized system prompt to output two lines.
 */
exports.getDeepseekResponse = async (userMessage) => {
  try {
    const systemInstruction =
      "You are an expert PartSelect support assistant specialized in home appliance parts. " +
      "Analyze the user's message and output exactly two lines in the following format:\n" +
      "MODEL_NUMBER::<model> (if no valid model/serial number is found, output MODEL_NUMBER::NONE)\n" +
      "QUERY::<query> (if no clear query is detected, output QUERY::NONE)\n" +
      "Do not include any additional text or punctuation.";
      
    const completion = await openai.chat.completions.create({
      model: "deepseek-chat",
      messages: [
        { role: "system", content: systemInstruction },
        { role: "user", content: userMessage },
      ],
    });
    return completion.choices[0].message.content;
  } catch (error) {
    console.error("Deepseek API error:", error.response?.data || error);
    throw new Error("Failed to retrieve response from Deepseek");
  }
};

/**
 * New function to generate a final contextual answer using product information.
 * Instead of scraping the product URL directly (which might be blocked),
 * we pass the product identifier (or URL if available) along with the user query
 * to Deepseek to generate a final, context-aware response.
 *
 * @param {string} productIdentifier - The product ID, model number, or URL.
 * @param {string} query - The customer's query.
 * @returns {string} - The final answer generated by Deepseek.
 */
exports.getFinalResponseForProduct = async (productIdentifier, query) => {
  try {
    // Build a system message that instructs the LLM to consider the product identifier.
    const systemInstruction =
      "You are a helpful product specialist for PartSelect. " +
      "The product identifier provided is: " + productIdentifier + ". " +
      "Using your knowledge of PartSelect products, generate a detailed and accurate answer to the following user query. " +
      "If the product page is inaccessible, rely on analogous product information. " +
      "Do not include extraneous information.";
    
    const messages = [
      { role: "system", content: systemInstruction },
      { role: "user", content: query },
    ];
    
    const completion = await openai.chat.completions.create({
      model: "deepseek-chat",
      messages,
    });
    return completion.choices[0].message.content;
  } catch (error) {
    console.error("Error getting final product response:", error.response?.data || error);
    return "Sorry, I couldn't retrieve a detailed answer at this time.";
  }
};